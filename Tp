#include <stdio.h>
#include <stdlib.h>

// وظيفة لتحميل السلسلة من المستخدم وتخصيص الذاكرة لها
char *ChargerChaine(int N) {
    char *chaine = (char*)malloc(sizeof(char) * (N + 1));  // تخصيص الذاكرة بشكل صحيح
    if (chaine == NULL) {
        printf("Memory allocation error\n");
        return NULL; 
    }
    printf("Enter the series: ");
    scanf("%s", chaine);  // قراءة السلسلة باستخدام scanf

    return chaine;
}

// حساب طول السلسلة
int Longueur(char *ch) {
    int len = 0;
    while (ch[len] != '\0') {
        len++;
    }
    return len;
}

// وظيفة لنسخ السلسلة إلى مصفوفة
void ChargerTab(char *p, char *Tab) {
    int i = 0;
    while (p[i] != '\0') {
        Tab[i] = p[i];
        i++;
    }
    Tab[i] = '\0';
}

// وظيفة لعكس السلسلة
void InverserTab(char *Tab, int n) {
    char temp;
    for (int i = 0; i < n / 2; i++) {
        temp = Tab[i];
        Tab[i] = Tab[n - i - 1];
        Tab[n - i - 1] = temp;
    }
}

// وظيفة لعرض السلسلة
void AfficherTab(char *Tab, int n) {
    for (int i = 0; i < n; i++) {
        printf("%c", Tab[i]);
    }
    printf("\n");
}

int main() {
    int N;
    printf("Enter the maximum length of the string: ");
    scanf("%d", &N);  // قراءة طول السلسلة
    getchar();  // قراءة \n المتبقية بعد استخدام scanf

    // تحميل السلسلة من المستخدم
    char *chaine = ChargerChaine(N);
    if (chaine == NULL) {
        return 1;  // في حالة حدوث خطأ في تخصيص الذاكرة
    }

    int longueur = Longueur(chaine);
    char *Tab = (char*)malloc(sizeof(char) * (longueur + 1));  // تخصيص الذاكرة للمصفوفة Tab
    if (Tab == NULL) {
        printf("Memory allocation error for Tab\n");
        free(chaine);
        return 1;
    }

    // نسخ السلسلة إلى المصفوفة
    ChargerTab(chaine, Tab);
    printf("Original series: ");
    AfficherTab(Tab, longueur);

    // عكس السلسلة
    InverserTab(Tab, longueur);
    printf("Inverse series: ");
    AfficherTab(Tab, longueur);

    // تحرير الذاكرة
    free(chaine);
    free(Tab);
    return 0;
}
