#include <stdio.h>
#include <stdlib.h>

// تعريف بنية العنصر في القائمة
struct element {
    int valeur;
    struct element *suivant;
};
typedef struct element Element;

// دالة لإنشاء قائمة فارغة
Element* creerListe() {
    return NULL;
}

// دالة لإضافة عنصر في بداية القائمة
Element* ajouterEnDebut(Element *liste, int valeur) {
    Element *nouveau = (Element*)malloc(sizeof(Element));
    nouveau->valeur = valeur;
    nouveau->suivant = liste;
    return nouveau;
}

// دالة لملء قائمة من مصفوفة (إضافة في البداية)
Element* chargerListe(int Tab[], int n, Element *liste) {
    for (int i = 0; i < n; i++) {
        liste = ajouterEnDebut(liste, Tab[i]);
    }
    return liste;
}

// دالة لعرض عناصر القائمة
void afficherListe(Element *liste) {
    while (liste != NULL) {
        printf("%d -> ", liste->valeur);
        liste = liste->suivant;
    }
    printf("NULL\n");
}

// دالة لحذف العنصر الأخير
Element* supprimerEnFin(Element *liste) {
    if (liste == NULL) {
        return NULL;
    }

    if (liste->suivant == NULL) { // إذا كانت القائمة تحتوي على عنصر واحد
        free(liste);
        return NULL;
    }

    Element *tmp = liste;
    while (tmp->suivant->suivant != NULL) {
        tmp = tmp->suivant;
    }
    free(tmp->suivant);
    tmp->suivant = NULL;
    return liste;
}

// دالة لتفريغ القائمة
void viderListe(Element *liste) {
    while (liste != NULL) {
        Element *tmp = liste;
        liste = liste->suivant;
        free(tmp);
    }
    printf("القائمة فارغة\n");
}

int main() {
    int Tab[] = {1, 3, 5, 7, 8, 10, 9, 11, 13, 20};
    Element *liste = creerListe();
    liste = chargerListe(Tab, 10, liste);

    afficherListe(liste);

    liste = supprimerEnFin(liste);
    afficherListe(liste);

    liste = ajouterEnDebut(liste, 40);
    afficherListe(liste);

    viderListe(liste);
    return 0;
}
